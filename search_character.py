from aiogram import types
from aiogram.dispatcher import FSMContext
from bs4 import BeautifulSoup
import requests
from difflib import get_close_matches
from aiogram.dispatcher.filters.state import State, StatesGroup
from main_menu import main_menu

class CharacterSearchStates(StatesGroup):
    WaitingForCharacterName = State()


async def search_character_menu(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üöÄ'))
    await message.reply(
        "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ ‚òï.",
        reply_markup=keyboard
    )
    await CharacterSearchStates.WaitingForCharacterName.set()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞


async def search_character(message: types.Message, state: FSMContext):
    character_name = message.text
    character_name_en = character_name.replace(" ", "_")
    character_category_urls = [
        "https://hunterxhunter.fandom.com/ru/wiki/–ö–∞—Ç–µ–≥–æ—Ä–∏—è:–ü–µ—Ä—Å–æ–Ω–∞–∂–∏",
        "https://hunterxhunter.fandom.com/ru/wiki/–ö–∞—Ç–µ–≥–æ—Ä–∏—è:–ü–µ—Ä—Å–æ–Ω–∞–∂–∏?from=–°–∫–≤–∞–ª–æ"
    ]
    character_list = []

    for character_category_url in character_category_urls:
        response = requests.get(character_category_url)

        if response.status_code == 200:
            soup = BeautifulSoup(response.content, "html.parser")
            character_links = soup.find_all("div", class_="category-page__members")

            for div in character_links:
                for link in div.find_all("a", href=True):
                    character_list.append(link.text)


    if character_name == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üöÄ':
        async def main_menu(message: types.Message, state: FSMContext):
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(types.KeyboardButton('–ü–æ–∏—Å–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π üîç'))
            keyboard.add(types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç üé≤'))
            await message.reply(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                reply_markup=keyboard
            )
            await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ª—é–±–æ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

        await main_menu(message, state)
    elif character_name:
        if character_name in character_list:
            character_url = f"https://hunterxhunter.fandom.com/ru/wiki/{character_name_en}"
            reply_message = f"<b>–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</b> {character_name}\n\n"
            reply_message += f"<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b> {character_url}"
            await message.reply(reply_message, parse_mode='HTML')
        else:
            similar_names = get_close_matches(character_name, character_list, n=10, cutoff=0.4)
            if similar_names:
                reply_message = f"–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:\n\n"
                reply_message += "\n".join(similar_names)
            else:
                reply_message = "–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—èüóø."
            await message.reply(reply_message)
    else:
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.")
        return

    if character_name == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üöÄ':
        async def main_menu(message: types.Message, state: FSMContext):
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(types.KeyboardButton('–ü–æ–∏—Å–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π üîç'))
            keyboard.add(types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç üé≤'))
            await message.reply(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                reply_markup=keyboard
            )
            await state.finish()  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ª—é–±–æ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ